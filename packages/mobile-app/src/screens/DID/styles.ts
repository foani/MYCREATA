import { StyleSheet, Platform } from 'react-native';
import { colors } from '../../constants/theme';

export const createStyles = (theme: 'light' | 'dark') => {
  return {
    didMain: StyleSheet.create({
      container: {
        flex: 1,
        backgroundColor: theme === 'dark' ? colors.darkBackground : colors.lightBackground,
      },
      header: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        paddingHorizontal: 16,
        paddingVertical: 12,
      },
      title: {
        fontSize: 24,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      infoButton: {
        padding: 8,
      },
      content: {
        flex: 1,
      },
      contentContainer: {
        padding: 16,
      },
      loadingContainer: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
      },
      didCard: {
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 16,
        padding: 16,
        marginBottom: 24,
        elevation: 4,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
      },
      didHeader: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 16,
      },
      didAvatarContainer: {
        marginRight: 12,
      },
      didAvatar: {
        width: 56,
        height: 56,
        borderRadius: 28,
      },
      didAvatarPlaceholder: {
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',
        alignItems: 'center',
        justifyContent: 'center',
      },
      didAvatarText: {
        fontSize: 24,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      didInfo: {
        flex: 1,
      },
      didName: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 4,
      },
      didIdentifier: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
      },
      didEditButton: {
        padding: 8,
      },
      didDetails: {
        marginBottom: 16,
      },
      didDetailRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        paddingVertical: 8,
        borderBottomWidth: 1,
        borderBottomColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
      },
      didDetailLabel: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
      },
      didDetailValue: {
        fontSize: 14,
        fontWeight: '500',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      didActions: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        paddingTop: 8,
      },
      didAction: {
        alignItems: 'center',
        padding: 8,
      },
      didActionText: {
        marginTop: 4,
        fontSize: 12,
        color: colors.primary,
      },
      emptyCard: {
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 16,
        padding: 24,
        alignItems: 'center',
        marginBottom: 24,
        elevation: 4,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
      },
      emptyTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 8,
      },
      emptyText: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        textAlign: 'center',
        marginBottom: 16,
      },
      createButton: {
        backgroundColor: colors.primary,
        paddingVertical: 12,
        paddingHorizontal: 24,
        borderRadius: 8,
      },
      createButtonText: {
        color: colors.white,
        fontWeight: '500',
        fontSize: 16,
      },
      connectionsContainer: {
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 16,
        padding: 16,
        marginBottom: 24,
        elevation: 4,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
      },
      connectionsHeader: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: 16,
      },
      connectionsTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      addConnectionButton: {
        flexDirection: 'row',
        alignItems: 'center',
      },
      addConnectionButtonText: {
        marginLeft: 4,
        color: colors.primary,
        fontWeight: '500',
      },
      connectionItem: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingVertical: 12,
        borderBottomWidth: 1,
        borderBottomColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
      },
      connectionIconContainer: {
        marginRight: 12,
      },
      connectionIcon: {
        width: 40,
        height: 40,
        borderRadius: 20,
      },
      connectionIconPlaceholder: {
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',
        alignItems: 'center',
        justifyContent: 'center',
      },
      connectionIconText: {
        fontSize: 16,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      connectionInfo: {
        flex: 1,
      },
      connectionName: {
        fontSize: 16,
        fontWeight: '500',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 2,
      },
      connectionDate: {
        fontSize: 12,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
      },
      connectionAction: {
        padding: 8,
      },
      emptyConnections: {
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 16,
        padding: 24,
        alignItems: 'center',
        marginBottom: 24,
        elevation: 4,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
      },
      emptyConnectionsTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 8,
      },
      emptyConnectionsText: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        textAlign: 'center',
        marginBottom: 16,
      },
      connectButton: {
        backgroundColor: colors.primary,
        paddingVertical: 12,
        paddingHorizontal: 24,
        borderRadius: 8,
      },
      connectButtonText: {
        color: colors.white,
        fontWeight: '500',
        fontSize: 16,
      },
      infoCard: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        padding: 16,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
        borderRadius: 12,
        marginBottom: 24,
      },
      infoText: {
        flex: 1,
        marginLeft: 8,
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        lineHeight: 20,
      },
    }),

    createDID: StyleSheet.create({
      container: {
        flex: 1,
        backgroundColor: theme === 'dark' ? colors.darkBackground : colors.lightBackground,
      },
      header: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        paddingHorizontal: 16,
        paddingVertical: 12,
      },
      backButton: {
        padding: 8,
      },
      title: {
        fontSize: 20,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      keyboardContainer: {
        flex: 1,
      },
      content: {
        flex: 1,
      },
      contentContainer: {
        padding: 16,
      },
      stepsIndicator: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        marginBottom: 24,
      },
      stepIndicator: {
        width: 32,
        height: 32,
        borderRadius: 16,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',
        alignItems: 'center',
        justifyContent: 'center',
      },
      activeStepIndicator: {
        backgroundColor: colors.primary,
      },
      stepIndicatorText: {
        fontSize: 14,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.lightGray : colors.gray,
      },
      activeStepIndicatorText: {
        color: colors.white,
      },
      stepLine: {
        flex: 1,
        height: 2,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',
        marginHorizontal: 8,
      },
      stepTitle: {
        fontSize: 20,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 8,
      },
      stepDescription: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        marginBottom: 24,
      },
      optionCard: {
        flexDirection: 'row',
        alignItems: 'center',
        padding: 16,
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 12,
        marginBottom: 16,
        elevation: 2,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
      },
      selectedOption: {
        backgroundColor: colors.primary,
      },
      optionIconContainer: {
        width: 48,
        height: 48,
        borderRadius: 24,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',
        alignItems: 'center',
        justifyContent: 'center',
        marginRight: 12,
      },
      optionContent: {
        flex: 1,
      },
      optionTitle: {
        fontSize: 16,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 4,
      },
      selectedOptionTitle: {
        color: colors.white,
      },
      optionDescription: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
      },
      selectedOptionDescription: {
        color: 'rgba(255,255,255,0.8)',
      },
      inputGroup: {
        marginBottom: 16,
      },
      inputLabel: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        marginBottom: 8,
      },
      input: {
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
        borderRadius: 8,
        padding: 12,
        fontSize: 16,
        color: theme === 'dark' ? colors.white : colors.black,
      },
      infoCard: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        padding: 16,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
        borderRadius: 12,
        marginTop: 16,
      },
      footer: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        padding: 16,
        borderTopWidth: 1,
        borderTopColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
      },
      backBtn: {
        paddingVertical: 12,
        paddingHorizontal: 16,
        borderRadius: 8,
        borderWidth: 1,
        borderColor: theme === 'dark' ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',
      },
      backBtnText: {
        color: theme === 'dark' ? colors.white : colors.black,
        fontWeight: '500',
        fontSize: 16,
      },
      nextBtn: {
        backgroundColor: colors.primary,
        paddingVertical: 12,
        paddingHorizontal: 24,
        borderRadius: 8,
        minWidth: 120,
        alignItems: 'center',
      },
      disabledBtn: {
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',
      },
      nextBtnText: {
        color: colors.white,
        fontWeight: '500',
        fontSize: 16,
      },
    }),

    connectDID: StyleSheet.create({
      container: {
        flex: 1,
        backgroundColor: theme === 'dark' ? colors.darkBackground : colors.lightBackground,
      },
      header: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        paddingHorizontal: 16,
        paddingVertical: 12,
      },
      backButton: {
        padding: 8,
      },
      title: {
        fontSize: 20,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      keyboardContainer: {
        flex: 1,
      },
      tabs: {
        flexDirection: 'row',
        marginHorizontal: 16,
        marginVertical: 8,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
        borderRadius: 8,
        padding: 4,
      },
      tab: {
        flex: 1,
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        paddingVertical: 8,
        borderRadius: 6,
      },
      activeTab: {
        backgroundColor: colors.primary,
      },
      tabText: {
        marginLeft: 4,
        fontSize: 14,
        fontWeight: '500',
        color: theme === 'dark' ? colors.lightGray : colors.gray,
      },
      activeTabText: {
        color: colors.white,
      },
      content: {
        flex: 1,
      },
      contentContainer: {
        padding: 16,
      },
      // QR Content
      qrContent: {
        alignItems: 'center',
      },
      qrTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 8,
      },
      qrDescription: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        textAlign: 'center',
        marginBottom: 24,
      },
      qrContainer: {
        width: 240,
        height: 240,
        padding: 20,
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 16,
        alignItems: 'center',
        justifyContent: 'center',
        elevation: 4,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
        marginBottom: 24,
      },
      connectionCodeContainer: {
        width: '100%',
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 12,
        padding: 16,
        marginBottom: 24,
      },
      connectionCodeLabel: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        marginBottom: 8,
      },
      connectionCode: {
        fontSize: 16,
        fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      actionsContainer: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        width: '100%',
      },
      refreshButton: {
        flexDirection: 'row',
        alignItems: 'center',
        padding: 12,
        borderWidth: 1,
        borderColor: colors.primary,
        borderRadius: 8,
        flex: 1,
        marginRight: 8,
        justifyContent: 'center',
      },
      refreshButtonText: {
        color: colors.primary,
        marginLeft: 4,
        fontWeight: '500',
      },
      openAppButton: {
        flexDirection: 'row',
        alignItems: 'center',
        padding: 12,
        backgroundColor: colors.primary,
        borderRadius: 8,
        flex: 1,
        marginLeft: 8,
        justifyContent: 'center',
      },
      openAppButtonText: {
        color: colors.white,
        marginLeft: 4,
        fontWeight: '500',
      },
      // Manual Content
      manualContent: {},
      manualTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 8,
      },
      manualDescription: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        marginBottom: 24,
      },
      inputGroup: {
        marginBottom: 24,
      },
      input: {
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
        borderRadius: 8,
        padding: 12,
        fontSize: 16,
        color: theme === 'dark' ? colors.white : colors.black,
        height: 120,
        textAlignVertical: 'top',
      },
      connectButton: {
        backgroundColor: colors.primary,
        paddingVertical: 14,
        borderRadius: 8,
        alignItems: 'center',
      },
      disabledButton: {
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',
      },
      connectButtonText: {
        color: colors.white,
        fontWeight: '500',
        fontSize: 16,
      },
      successContainer: {
        flexDirection: 'row',
        alignItems: 'center',
      },
      // App Content
      appContent: {},
      appTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 8,
      },
      appDescription: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        marginBottom: 24,
      },
      appButtonContainer: {
        alignItems: 'center',
        marginBottom: 24,
      },
      appButton: {
        width: 160,
        height: 160,
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 16,
        alignItems: 'center',
        justifyContent: 'center',
        elevation: 4,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
        marginBottom: 12,
      },
      appButtonText: {
        marginTop: 12,
        fontSize: 16,
        fontWeight: '500',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      infoCard: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        padding: 16,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',
        borderRadius: 12,
      },
      infoText: {
        flex: 1,
        marginLeft: 8,
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        lineHeight: 20,
      },
    }),

    didBackup: StyleSheet.create({
      container: {
        flex: 1,
        backgroundColor: theme === 'dark' ? colors.darkBackground : colors.lightBackground,
      },
      header: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        paddingHorizontal: 16,
        paddingVertical: 12,
      },
      backButton: {
        padding: 8,
      },
      title: {
        fontSize: 20,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
      },
      content: {
        flex: 1,
      },
      contentContainer: {
        padding: 16,
      },
      infoCard: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: theme === 'dark' ? 'rgba(65,105,225,0.1)' : 'rgba(65,105,225,0.05)',
        borderRadius: 12,
        padding: 16,
        marginBottom: 24,
      },
      infoText: {
        flex: 1,
        marginLeft: 12,
        fontSize: 14,
        color: theme === 'dark' ? colors.white : colors.black,
        lineHeight: 20,
      },
      sectionTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 16,
      },
      optionCard: {
        flexDirection: 'row',
        alignItems: 'center',
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 12,
        padding: 16,
        marginBottom: 16,
        elevation: 2,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
      },
      successCard: {
        backgroundColor: colors.primary,
      },
      optionIcon: {
        width: 48,
        height: 48,
        borderRadius: 24,
        backgroundColor: theme === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',
        alignItems: 'center',
        justifyContent: 'center',
        marginRight: 16,
      },
      optionContent: {
        flex: 1,
      },
      optionTitle: {
        fontSize: 16,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 4,
      },
      successText: {
        color: colors.white,
      },
      optionDescription: {
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
      },
      successDescription: {
        color: 'rgba(255,255,255,0.8)',
      },
      tipCard: {
        backgroundColor: theme === 'dark' ? colors.darkCard : colors.white,
        borderRadius: 12,
        padding: 16,
        marginTop: 8,
        marginBottom: 16,
      },
      tipTitle: {
        fontSize: 16,
        fontWeight: 'bold',
        color: theme === 'dark' ? colors.white : colors.black,
        marginBottom: 12,
      },
      tipItem: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        marginBottom: 8,
      },
      tipIcon: {
        marginTop: 2,
        marginRight: 8,
      },
      tipText: {
        flex: 1,
        fontSize: 14,
        color: theme === 'dark' ? colors.lightGray : colors.gray,
        lineHeight: 20,
      },
      learnMoreButton: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        padding: 12,
        marginBottom: 24,
      },
      learnMoreButtonText: {
        fontSize: 14,
        color: colors.primary,
        marginRight: 4,
        fontWeight: '500',
      },
    }),
  };
};
